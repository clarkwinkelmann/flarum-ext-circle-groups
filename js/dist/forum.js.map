{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,GCLRF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ER,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,M,+BCLvD,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,iC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,6B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,6B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,0B,aCSxD,SAASC,EAASC,GACd,OAAO,SAAAC,GAAI,SAAOA,IAAQA,EAAKD,KAAOC,EAAKD,MAAQA,IAGvD,SAASE,EAAWC,GAEhB,OAAO,SAAAF,GAAI,OAAIA,GAAQA,EAAKG,OAASH,EAAKG,MAAMD,WAAaF,EAAKG,MAAMD,UAAUE,SAAWF,GAGjG,SAASG,EAAWC,EAAkBC,GAClC,IAAMC,EAASD,EAAKC,SAIpB,GAAKC,MAAMC,QAAQF,GAAnB,CAMA,IAAMG,EAAoBH,EAAOI,MAAK,SAAAC,GAClC,OAAOA,GAASA,EAAMC,WAIrBH,IAILL,EAAKH,MAAQG,EAAKH,OAAS,GAC3BG,EAAKH,MAAMY,MAAQT,EAAKH,MAAMY,OAAS,GACvCT,EAAKH,MAAMY,MAAMC,YAAcL,EAAkBG,UAGrDG,IAAAA,aAAAA,IAAqB,iCAAiC,YAClDC,EAAAA,EAAAA,QAAOC,IAAAA,UAAoB,QAAQ,SAAUC,GACzC,IAAMb,EAAOc,KAAKlB,MAAMmB,KAAKf,OAGxBA,GAQLF,EAJee,EAAMG,SAASX,KAAKd,EAAS,OACvCyB,SAASX,KAAKd,EAAS0B,MACvBD,SAASX,KAAKX,EAAW,2BAEXM,OAGvBW,EAAAA,EAAAA,QAAOO,IAAAA,UAAoB,QAAQ,SAAUL,GACzC,IAAMM,EAAWN,EAAMG,SAASX,KAAKX,EAAW,qBAC3CsB,SAASX,KAAKX,EAAW,cACzBsB,SAASX,KAAKX,EAAW,qBACzBsB,SAASX,KAAKX,EAAW,sBAG1ByB,EAASH,SAAS,GAAGxB,MAAQyB,KAK7BnB,EAJeqB,EAASH,SAAS,GAC5BA,SAASX,KAAKX,EAAW,oBACzBsB,SAASX,KAAKX,EAAW,WAEXoB,KAAKlB,MAAMI,UAKtCW,EAAAA,EAAAA,QAAOS,IAAAA,UAAwB,QAAQ,SAAUP,GAG7Cf,EAFee,EAAMG,SAASX,KAAKX,EAAW,WAE3BoB,KAAKlB,MAAMI,a","sources":["webpack://@clarkwinkelmann/circle-groups/webpack/bootstrap","webpack://@clarkwinkelmann/circle-groups/webpack/runtime/compat get default export","webpack://@clarkwinkelmann/circle-groups/webpack/runtime/define property getters","webpack://@clarkwinkelmann/circle-groups/webpack/runtime/hasOwnProperty shorthand","webpack://@clarkwinkelmann/circle-groups/webpack/runtime/make namespace object","webpack://@clarkwinkelmann/circle-groups/external root \"flarum.core.compat['forum/app']\"","webpack://@clarkwinkelmann/circle-groups/external root \"flarum.core.compat['common/extend']\"","webpack://@clarkwinkelmann/circle-groups/external root \"flarum.core.compat['forum/components/AvatarEditor']\"","webpack://@clarkwinkelmann/circle-groups/external root \"flarum.core.compat['forum/components/PostUser']\"","webpack://@clarkwinkelmann/circle-groups/external root \"flarum.core.compat['forum/components/UserCard']\"","webpack://@clarkwinkelmann/circle-groups/external root \"flarum.core.compat['common/components/Link']\"","webpack://@clarkwinkelmann/circle-groups/./src/forum/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/AvatarEditor'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/PostUser'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/UserCard'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","import {Vnode} from 'mithril';\nimport app from 'flarum/forum/app';\nimport {extend} from 'flarum/common/extend';\nimport User from 'flarum/common/models/User';\nimport AvatarEditor from 'flarum/forum/components/AvatarEditor';\nimport PostUser from 'flarum/forum/components/PostUser';\nimport UserCard from 'flarum/forum/components/UserCard';\nimport Link from 'flarum/common/components/Link';\n\nfunction matchTag(tag: any): (node: Vnode) => boolean {\n    return node => !!(node && node.tag && node.tag === tag);\n}\n\nfunction matchClass(className: string): (node: Vnode<any>) => boolean {\n    // trim() to handle classNames that end with spaces easier\n    return node => node && node.attrs && node.attrs.className && node.attrs.className.trim() === className;\n}\n\nfunction applyColor(vdom: Vnode<any>, user: User): void {\n    const groups = user.groups();\n\n    // If a user has no groups or groups have not been loaded, false might be returned\n    // We'll skip this part if this happens\n    if (!Array.isArray(groups)) {\n        return;\n    }\n\n    // Find the first group that has a color\n    // We don't read badges because we would need to support every badge component and its attrs\n    const firstColoredGroup = groups.find(group => {\n        return group && group.color();\n    });\n\n    // If there are no color groups, skip\n    if (!firstColoredGroup) {\n        return;\n    }\n\n    vdom.attrs = vdom.attrs || {};\n    vdom.attrs.style = vdom.attrs.style || {};\n    vdom.attrs.style.borderColor = firstColoredGroup.color();\n}\n\napp.initializers.add('clarkwinkelmann-circle-groups', () => {\n    extend(PostUser.prototype, 'view', function (vnode) {\n        const user = this.attrs.post.user();\n\n        // If the post belongs to a deleted user, skip\n        if (!user) {\n            return;\n        }\n\n        const avatar = vnode.children.find(matchTag('h3'))\n            .children.find(matchTag(Link))\n            .children.find(matchClass('Avatar PostUser-avatar'));\n\n        applyColor(avatar, user);\n    });\n\n    extend(UserCard.prototype, 'view', function (vnode) {\n        const identity = vnode.children.find(matchClass('darkenBackground'))\n            .children.find(matchClass('container'))\n            .children.find(matchClass('UserCard-profile'))\n            .children.find(matchClass('UserCard-identity'));\n\n        // This component will only exist if we are not in edit mode\n        if (identity.children[0].tag === Link) {\n            const avatar = identity.children[0]\n                .children.find(matchClass('UserCard-avatar'))\n                .children.find(matchClass('Avatar'));\n\n            applyColor(avatar, this.attrs.user);\n        }\n    });\n\n    // We color the avatar editor because it's what users see on their own profile, or admins everywhere\n    extend(AvatarEditor.prototype, 'view', function (vnode) {\n        const avatar = vnode.children.find(matchClass('Avatar'));\n\n        applyColor(avatar, this.attrs.user);\n    });\n});\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","matchTag","tag","node","matchClass","className","attrs","trim","applyColor","vdom","user","groups","Array","isArray","firstColoredGroup","find","group","color","style","borderColor","app","extend","PostUser","vnode","this","post","children","Link","UserCard","identity","AvatarEditor"],"sourceRoot":""}